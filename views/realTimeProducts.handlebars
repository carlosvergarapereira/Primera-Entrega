<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>Productos en Tiempo Real</title>
    <style>
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        table, th, td {
            border: 1px solid black;
        }
        th, td {
            padding: 10px;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
        }
        img {
            max-width: 100px;
            height: auto;
        }
        button {
            background-color: red;
            color: white;
            border: none;
            padding: 5px 10px;
            cursor: pointer;
        }
        .edit-button {
            background-color: green;
            margin-right: 5px;
        }
    </style>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const socket = io();
            const productTableBody = document.getElementById('product-table-body');

            function updateProductTable(products) {
                productTableBody.innerHTML = '';
                products.forEach(product => {
                    const imageUrl = product.thumbnails && product.thumbnails.length > 0 ? product.thumbnails[0] : 'https://www.shutterstock.com/image-vector/default-ui-image-placeholder-wireframes-600nw-1037719192.jpg';
                    const tr = document.createElement('tr');
                    tr.innerHTML = `
                        <td>${product.nombre}</td>
                        <td>${product.descripcion}</td>
                        <td>$${product.precio.toFixed(2)}</td>
                        <td>${product.estado ? 'Sí' : 'No'}</td>
                        <td>${product.categoria}</td>
                        <td><img src="${imageUrl}" alt="${product.nombre}"></td>
                        <td>
                            <button class="edit-button" onclick='openEditModal(${JSON.stringify(product)})'>Editar</button>
                            <button onclick="deleteProduct('${product._id}')">Eliminar</button>
                        </td>
                    `;
                    productTableBody.appendChild(tr);
                });
            }

            function openEditModal(product) {
                document.getElementById('editId').value = product._id;
                document.getElementById('editNombre').value = product.nombre;
                document.getElementById('editDescripcion').value = product.descripcion;
                document.getElementById('editPrecio').value = product.precio;
                document.getElementById('editCategoria').value = product.categoria;
                document.getElementById('editEstado').checked = product.estado;
                document.getElementById('editProductModal').style.display = 'block';
            }

            function closeEditModal() {
                document.getElementById('editProductModal').style.display = 'none';
            }

            document.getElementById('editProductForm').addEventListener('submit', function(e) {
                e.preventDefault();
                const productId = document.getElementById('editId').value;
                const formData = {
                    nombre: document.getElementById('editNombre').value,
                    descripcion: document.getElementById('editDescripcion').value,
                    precio: parseFloat(document.getElementById('editPrecio').value),
                    categoria: document.getElementById('editCategoria').value,
                    estado: document.getElementById('editEstado').checked
                };

                fetch(`/api/products/${productId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                })
                .then(response => response.json())
                .then(data => {
                    console.log('Producto actualizado:', data);
                    closeEditModal();
                    location.reload(); // O actualiza la tabla directamente sin recargar
                })
                .catch(error => console.error('Error al actualizar producto:', error));
            });

            function deleteProduct(productId) {
                fetch(`/api/products/${productId}`, { method: 'DELETE' })
                .then(response => response.json())
                .then(data => {
                    console.log('Producto eliminado:', data);
                    location.reload(); // Recarga la página para reflejar los cambios
                })
                .catch(error => console.error('Error al eliminar producto:', error));
            }

            // Carga inicial de productos
            try {
                const initialProducts = JSON.parse(document.getElementById('initialProducts').textContent);
                updateProductTable(initialProducts);
            } catch (error) {
                console.error('Error al parsear los productos:', error);
            }

            socket.on('updateProducts', (updatedProducts) => {
                updateProductTable(updatedProducts);
            });
        });
    </script>
</head>
<body>
    <h1>Productos en Tiempo Real</h1>
    <table>
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Descripción</th>
                <th>Precio</th>
                <th>Disponible</th>
                <th>Categoría</th>
                <th>Imagen</th>
                <th>Acción</th>
            </tr>
        </thead>
        <tbody id="product-table-body">
            <!-- Las filas de productos se insertarán aquí dinámicamente -->
        </tbody>
    </table>

    <!-- Div oculto para almacenar productos iniciales -->
    <div id="initialProducts" style="display: none;">
        {{{products}}}
    </div>

    <!-- Modal de Edición de Producto -->
    <div id="editProductModal" style="display: none; position: fixed; left: 50%; top: 50%; transform: translate(-50%, -50%); background-color: white; padding: 20px; border: 2px solid black; z-index: 1000;">
        <form id="editProductForm">
            <input type="hidden" id="editId" name="id">
            <p>
                <label>Nombre:</label>
                <input type="text" id="editNombre" name="nombre" required>
            </p>
            <p>
                <label>Descripción:</label>
                <input type="text" id="editDescripcion" name="descripcion" required>
            </p>
            <p>
                <label>Precio:</label>
                <input type="number" id="editPrecio" name="precio" required min="0">
            </p>
            <p>
                <label>Categoría:</label>
                <select id="editCategoria" name="categoria">
                    <option value="electronica">Electrónica</option>
                    <option value="ropa">Ropa</option>
                    <option value="hogar">Hogar</option>
                    <option value="otros">Otros</option>
                </select>
            </p>
            <p>
                <label>Estado:</label>
                <input type="checkbox" id="editEstado" name="estado">
            </p>
            <p>
                <button type="submit">Guardar Cambios</button>
                <button type="button" onclick="closeEditModal()">Cerrar</button>
            </p>
        </form>
    </div>
</body>
</html>
