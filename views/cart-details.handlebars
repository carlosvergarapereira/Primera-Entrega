<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Detalles del Carrito</title>
    <link rel="stylesheet" href="/css/styles.css">
    <style>
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 10px;
            background-color: #f9f9f9;
            border-radius: 5px;
        }
        .item-details h2 {
            font-size: 18px;
            color: #333;
            margin-bottom: 5px;
        }
        .item-details p {
            margin: 5px 0;
        }
        .action-buttons {
            display: flex;
            flex-direction: column;
        }
        .delete-btn {
            background-color: red;
            color: white;
            border: none;
            padding: 8px;
            cursor: pointer;
            border-radius: 5px;
            margin-top: 10px;
        }
    </style>
</head>
<body>

    <main class="main">
        {{#if products.length}}
            {{#each products}}
            <div class="cart-item">
                <div class="item-details">
                    <h2>{{nombre}}</h2>
                    <p>Precio: ${{precio}}</p>
                    <p>Cantidad:
                        <input type="number" value="{{cantidad}}" min="1" onchange="updateQuantity('{{../cartId}}', '{{id}}', this.value)">
                    </p>
                    <p>Total: ${{total}}</p>
                </div>
                <div class="action-buttons" id="eliminar">
                    <li>
                        <button class="delete-btn" data-cart-id="{{../cartId}}" data-product-id="{{id}}">
                        Eliminar Producto
                        </button>
                    </li>
                </div>
            </div>
            {{/each}}
            <h2>Total del Carrito: ${{totalPrice}}</h2>
        {{else}}
            <p>Tu carrito está vacío.</p>
            <a href="/products">Volver a la tienda</a>
        {{/if}}
    </main>

    <script>
        // Función para eliminar un producto del carrito
        async function removeProduct(cartId, productId) {
            try {
                const response = await fetch(`/api/carts/${cartId}/products/${productId}`, {
                    method: 'DELETE'
                });

                if (response.ok) {
                    location.reload();
                } else {
                    const errorData = await response.json();
                    alert('Error al eliminar el producto: ' + errorData.message);
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Hubo un problema al intentar eliminar el producto.');
            }
        }

        // Capturar el evento de click en el botón de eliminar
        document.querySelectorAll('.delete-btn').forEach(button => {
            button.addEventListener('click', async function() {
                const cartId = this.getAttribute('data-cart-id');
                const productId = this.getAttribute('data-product-id');

                // Eliminar el producto
                await removeProduct(cartId, productId);
            });
        });

        // Función para actualizar la cantidad de un producto en el carrito
        async function updateQuantity(cartId, productId, newQuantity) {
            if (newQuantity <= 0) {
                alert('La cantidad debe ser mayor que 0');
                return;
            }

            try {
                const response = await fetch(`/api/carts/${cartId}/products/${productId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ quantity: newQuantity })
                });

                if (response.ok) {
                    location.reload(); // Recargar la página para mostrar los cambios
                } else {
                    const errorData = await response.json();
                    alert('Error al actualizar la cantidad del producto: ' + errorData.message);
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Hubo un problema al intentar actualizar la cantidad.');
            }
        }
    </script>
</body>
</html>
