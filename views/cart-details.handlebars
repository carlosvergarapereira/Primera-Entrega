<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Detalles del Carrito</title>
    <link rel="stylesheet" href="/css/styles.css">
    <style>
        /* Mantén el estilo existente */
    </style>
</head>
<body>
    

    <main class="main">
        {{#if products.length}}
            {{#each products}}
            <div class="cart-item">
                <div class="item-details">
                    <h2>{{nombre}}</h2>
                    <p>Precio: ${{precio}}</p>
                    <p>Cantidad:
                        <input type="number" value="{{cantidad}}" min="1" onchange="updateQuantity('{{../cartId}}', '{{id}}', this.value)">
                    </p>
                    <p>Total: ${{total}}</p>
                </div>
                <div class="action-buttons" id="eliminar">
                    <li>
                        
                        <button class="delete-btn" data-cart-id="{{../cartId}}" data-product-id="{{id}}">
                        Eliminar Producto
                        </button>
                    </li>
                </div>
            </div>
            {{/each}}
            <h2>Total del Carrito: ${{totalPrice}}</h2>
        {{else}}
            <p>Tu carrito está vacío.</p>
            <a href="/products">Volver a la tienda</a>
        {{/if}}
    </main>

    <script>
        // Función para reducir la cantidad de un producto en el carrito
        async function removeProduct(cartId, productId) {
            console.log('Cart ID:', cartId);  // Verifica que el cartId se está pasando correctamente
            console.log('Product ID:', productId); 
            try {
                const response = await fetch(`/api/carts/api/carts/${cartId}/products/${productId}`, {
                    method: 'DELETE'
                });

                if (response.ok) {
                    // Si la eliminación es exitosa, recarga la página para reflejar los cambios
                    location.reload();
                } else {
                    // Manejar el error
                    alert('Error al reducir la cantidad del producto');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Hubo un problema al intentar reducir la cantidad del producto.');
            }
        }

         // Capturar el evento de click en el botón de eliminar
            document.querySelectorAll('.delete-btn').forEach(button => {
                button.addEventListener('click', async function() {
                const cartId = this.getAttribute('data-cart-id');
                const productId = this.getAttribute('data-product-id');

                // Realizar la solicitud DELETE
                const response = await fetch(`/api/carts/api/carts/${cartId}/products/${productId}`, {
                    method: 'DELETE'
                });

                if (response.ok) {
                    alert('Producto eliminado');
                    // Recargar la página o actualizar la vista si es necesario
                    window.location.reload();
                } else {
                    alert('Error al eliminar el producto');
                }
                });
            });

        // Función para actualizar la cantidad de un producto en el carrito
        async function updateQuantity(cartId, productId, quantity) {
            try {
                const response = await fetch(`/api/carts/api/carts/${cartId}/products/${productId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ quantity })
                });

                if (response.ok) {
                    // Si la actualización es exitosa, recarga la página para reflejar los cambios
                    location.reload();
                } else {
                    // Manejar el error
                    alert('Error al actualizar la cantidad del producto');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Hubo un problema al intentar actualizar la cantidad.');
            }
        }
    </script>
</body>
</html>
